# Generated by Django 5.1.3 on 2025-03-11 09:28

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Unique identifier for the target protein', max_length=100, unique=True)),
                ('pdb_file', models.FileField(help_text='Validated PDB structure file', upload_to='targets/')),
                ('protein_type', models.CharField(choices=[('SPIKE', 'Spike Protein'), ('PROTEASE', 'Protease'), ('POLYMERASE', 'Polymerase')], help_text='Type of viral protein', max_length=20)),
                ('resolution', models.FloatField(help_text='X-ray resolution in Ångströms (≤3.0Å required)', validators=[django.core.validators.MaxValueValidator(3.0)])),
                ('validation_status', models.BooleanField(default=False, help_text='PDB validation outcome from section 2 checks')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Predefined Target',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Compound',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('SMILES', 'SMILES (Drawn/Entered)'), ('PDB', 'PDB File'), ('PEPTIDE', 'Short Peptide (2b)'), ('BIOMOLECULE', 'Large Biomolecule (2c)')], help_text='Input type as per section 2 requirements', max_length=20)),
                ('input_data', models.TextField(help_text='Raw input (SMILES, sequence, or PDB content)')),
                ('validation_status', models.BooleanField(default=False, help_text='Validation outcome from section 2 checks')),
                ('validation_errors', models.JSONField(blank=True, default=dict, help_text='Validation error messages')),
                ('converted_smiles', models.TextField(blank=True, help_text='Converted SMILES for docking (peptides/small molecules)', null=True)),
                ('converted_pdb', models.FileField(blank=True, help_text='Generated PDB from AlphaFold (biomolecules)', null=True, upload_to='converted_structures/')),
                ('alphafold_job_id', models.CharField(blank=True, help_text='Tracking ID for AlphaFold predictions', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['type', 'validation_status'], name='app_compoun_type_f3fe79_idx')],
            },
        ),
        migrations.CreateModel(
            name='ScreeningJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('VALIDATING', 'Validating Input'), ('SIM_CHECK', 'Similarity Check (Section 3)'), ('DOCKING', 'Docking Execution (Section 4)'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', help_text='Current workflow state per section 5 sequence diagram', max_length=20)),
                ('similarity_data', models.JSONField(blank=True, default=dict, help_text='TTD/CoviDrug analysis results')),
                ('docking_score', models.FloatField(blank=True, help_text='Best AutoDock Vina affinity score (kcal/mol)', null=True)),
                ('ligand_pdbqt', models.FileField(blank=True, help_text='Prepared ligand file for Vina docking', null=True, upload_to='docking_files/ligands/')),
                ('complex_structure', models.FileField(blank=True, help_text='Final protein-ligand complex structure', null=True, upload_to='results/complexes/')),
                ('visualization_config', models.JSONField(blank=True, help_text='NGL.js visualization parameters for section 5 output', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Timestamp of job completion/failure', null=True)),
                ('compound', models.ForeignKey(help_text='Input compound with validated/converted data', on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='app.compound')),
                ('target', models.ForeignKey(help_text='Selected target protein from section 1', on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='app.target')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status'], name='app_screeni_status_71304a_idx'), models.Index(fields=['docking_score'], name='app_screeni_docking_ea77f0_idx')],
            },
        ),
    ]
